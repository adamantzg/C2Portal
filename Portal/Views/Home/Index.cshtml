<app-root></app-root>
@section head
{
    <style>
        .navbar {
            min-height: 100px;
        }

        .spinner-overlay {
            background-color: white;
            cursor: wait;
        }

        .spinner-message-container {
            position: absolute;
            top: 35%;
            left: 0;
            right: 0;
            height: 0;
            text-align: center;
            z-index: 10001;
            cursor: wait;
        }

        .spinner-message {
            display: inline-block;
            text-align: left;
            background-color: #333;
            color: #f5f5f5;
            padding: 20px;
            border-radius: 4px;
            font-size: 20px;
            font-weight: bold;
            filter: alpha(opacity=100);
        }

        .modal-backdrop.in {
            filter: alpha(opacity=10);
            opacity: .10;
        }

        .modal-backdrop {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: 1040;
            background-color: #000;
        }
		.btn-xs, .btn {
			margin-right: 2px;
		}

        .has-error{
	        border-color:darkred;
	        background: #e74c3c;
        }
    </style>
    @if (HttpContext.Current.IsDebuggingEnabled)
    {
        <link rel="stylesheet" href="~/angularapp/styles.css">
    }
	<link rel="stylesheet" href="https://unpkg.com/ngx-bootstrap/datepicker/bs-datepicker.css">
    <link rel="stylesheet" href="~/Content/styles.css" />
   
}
@section scripts
{
    @{
        IEnumerable<string> fileEntries = Enumerable.Empty<string>();
        List<string> bundles = new List<string>();
        var version = typeof(Portal.RouteConfig).Assembly.GetName().Version.ToString();
    }
    @if (HttpContext.Current.IsDebuggingEnabled)
    {
        <script src="~/distdev/polyfills.bundle.js?v=@version"></script>
        <script src="~/distdev/app.bundle.js?v=@version"></script>
    }
    else
    {
        fileEntries = Directory.EnumerateFiles(Server.MapPath("~/dist"));
        bundles.Add("runtime.");
        bundles.Add("polyfills");
        bundles.Add("styles.");
        bundles.Add("vendor.");
        bundles.Add("main.");

        foreach (string bundleName in bundles)
        {
            foreach (string fileName in fileEntries)
            {
                FileInfo fileInfo = new FileInfo(fileName);
                if (fileInfo.Name.Contains(bundleName) && fileInfo.Name.Contains(".map") == false)
                {
                    if (fileInfo.Name.Contains("styles"))
                    {
                        <link href="~/dist/@fileInfo.Name" rel="stylesheet" />
                    }
                    else
                    {
                        <script src="~/dist/@fileInfo.Name"></script>
                    }

                }

            }

        }

    }
}
